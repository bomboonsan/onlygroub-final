---
// TYPES
import type { Post } from '../types/post';

import News from '../templates/News.astro';
import Movie from '../templates/Movie.astro';

import { Image } from 'astro:assets';

import "../styles/content.scss";
import "../styles/breadcrumb.scss";

import { GraphQLClient } from 'graphql-request';
import { ALL_POSTS_QUERY } from '../queries/posts';

import { formatDateToThai } from '../lib/formatDate';

import Layout from '../layouts/Layout.astro';

import Content from '../templates/Content.astro';

import RelatedPosts from '../components/RelatedPosts.astro';

import NextPrevPost from '../components/NextPrevPost.astro';

export async function getStaticPaths() {
    let allPosts : any = [];
    let hasNextPage : boolean = true;
    let afterCursor : any = null;

    while (hasNextPage) { // วนลูปเพื่อดึงข้อมูลบทความทั้งหมด เพราะว่า WpGraphQL แสดงได้สูงสุดแค่ 100 บทความแต่หน้า
        const client = new GraphQLClient('https://assets.onlygroub.com/graphql');
        const data : any = await client.request(ALL_POSTS_QUERY , { after: afterCursor });
        allPosts = allPosts.concat(data.posts.nodes);
        hasNextPage = data.posts.pageInfo.hasNextPage;
        afterCursor = data.posts.pageInfo.endCursor;
    }

    return allPosts.map((post: { slug: string }) => {
        const index = allPosts.indexOf(post);
        const prev = allPosts[index - 1];
        const next = allPosts[index + 1];
        return {
            params: { slug: post.slug },
            props: { post, prev, next },
        };
    });
}
const { post, prev, next }: { post: Post, prev?: Post, next?: Post } = Astro.props;
const relatedPosts = (post as any)?.relatedPosts.nodes;

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

const isMovie : boolean = ['thai', 'inter'].includes(post.terms.nodes[0]?.slug);

const structuredData : any = `
{
    "@context": "https://schema.org/",
    "@type": "NewsArticle",
    "headline": "${post.title}",
    "image": {
        "@type": "ImageObject",
        "url": "${post.featuredImageFull.node.sourceUrl}",
        "width": "${post.featuredImageFull.node.mediaDetails.width}",
        "height": "${post.featuredImageFull.node.mediaDetails.height}"
    },
    "author": {
        "@type": "Person",
        "name": "ONLYGROUB",
        "url": "https://onlygroub.com"
    },
    "publisher": {
        "@type": "Organization",
        "name": "ONLYGROUB",
        "logo": {
        "@type": "ImageObject",
        "url": "https://onlygroub.com/logo.png",
        "width": "342",
        "height": "106"
        }
    },
    "datePublished": "${post.date}+07:00",
    "dateModified": "${post.modified}+07:00"
}
`;
let postTitle : any;
if (isMovie) {
    postTitle = `ดูหนัง ${post.title} เต็มเรื่อง`;
} else {
    postTitle = post.title;
}
---
<Layout title={postTitle} seo={post.seo} structuredData={structuredData}>
    <Content>
        {isMovie && <Movie post={post} />}
        {!isMovie && <News post={post} />}
        <RelatedPosts relatedPosts={relatedPosts} />
        <NextPrevPost next={next} prev={prev} />
    </Content>
</Layout>
